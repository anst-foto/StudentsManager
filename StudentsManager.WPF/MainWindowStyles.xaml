<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!-- DEFAULT -->
    <Style x:Key="StyleDefault" TargetType="{x:Type Control}">
        <Setter Property="FontSize" Value="16"/>
        
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="5"/>
    </Style>
    
    <Style x:Key="StyleMarginLeftRight" TargetType="{x:Type Control}">
        <Setter Property="Margin" Value="10, 0"/>
    </Style>
    
    <!-- #region BUTTONS -->
    <sys:Double x:Key="ButtonWidthBase">150</sys:Double>
    <sys:Double x:Key="ButtonWidthZoom">155</sys:Double>
    
    <sys:Double x:Key="ButtonHeightBase">50</sys:Double>
    <sys:Double x:Key="ButtonHeightZoom">55</sys:Double>
    
    <Style x:Key="StyleButtonDefault" TargetType="{x:Type Button}"
           BasedOn="{StaticResource StyleDefault}">
        <Style.Setters>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="{StaticResource ButtonWidthBase}"/>
            <Setter Property="Height" Value="{StaticResource ButtonHeightBase}"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="1"
                                BorderBrush="Black"
                                CornerRadius="10 0 10 0"
                                Padding="10">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Heavy"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            
            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width"
                                             From="{StaticResource ButtonWidthBase}"
                                             To="{StaticResource ButtonWidthZoom}"
                                             Duration="0:0:0.1"
                                             AutoReverse="True"/>
                            <DoubleAnimation Storyboard.TargetProperty="Height"
                                             From="{StaticResource ButtonHeightBase}"
                                             To="{StaticResource ButtonHeightZoom}"
                                             Duration="0:0:0.1"
                                             AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="StyleButtonNew" TargetType="{x:Type Button}"
           BasedOn="{StaticResource StyleButtonDefault}">
        <Style.Setters>
            <Setter Property="Background" Value="DarkBlue"/>
        </Style.Setters>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Blue"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="StyleButtonSave" TargetType="{x:Type Button}"
           BasedOn="{StaticResource StyleButtonDefault}">
        <Setter Property="Background" Value="DarkGreen"/>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Green"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="StyleButtonDelete" TargetType="{x:Type Button}"
           BasedOn="{StaticResource StyleButtonDefault}">
        <Setter Property="Background" Value="DarkRed"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty="(Button.Background).(SolidColorBrush.Color)">
                            <ColorAnimationUsingKeyFrames Duration="0:0:3"
                                                          AutoReverse="True"
                                                          RepeatBehavior="2x">
                                <LinearColorKeyFrame KeyTime="0%" Value="DarkRed"/>
                                <LinearColorKeyFrame KeyTime="25%" Value="DarkBlue"/>
                                <LinearColorKeyFrame KeyTime="50%" Value="DarkMagenta"/>
                                <LinearColorKeyFrame KeyTime="75%" Value="DarkGreen"/>
                                <LinearColorKeyFrame KeyTime="100%" Value="DarkViolet"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="StyleButtonClear" TargetType="{x:Type Button}"
           BasedOn="{StaticResource StyleButtonDefault}">
        <Setter Property="Background" Value="DarkOrange"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Orange"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- #endregion BUTTONS -->
    
    <!-- #region LABEL & INPUT -->
    <Style x:Key="StyleLabel" TargetType="{x:Type Label}"
           BasedOn="{StaticResource StyleDefault}">
        <Setter Property="Width" Value="125"/>
    </Style>
    <Style x:Key="StyleInput" TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource StyleDefault}">
        <Setter Property="Width" Value="300"/>
    </Style>
    <Style x:Key="StyleInputAge" TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource StyleDefault}">
        <Setter Property="Width" Value="50"/>
    </Style>
    <!-- #endregion LABEL & INPUT -->
</ResourceDictionary>